#!/usr/bin/env python

import rospy, time
import datetime
from turtlesim.srv import Spawn, Kill
from geometry_msgs.msg import Twist


def spawn_turtle(x, y, name):
    rospy.wait_for_service('spawn')
    spawner = rospy.ServiceProxy('spawn', Spawn)
    spawner(x, y, 0, name)

def kill_turtle(name):
    rospy.wait_for_service('kill')
    killer = rospy.ServiceProxy('kill', Kill)
    killer(name)
    
def drawdot(name):
    cmdPublisher = name + '/cmd_vel'
    pub = rospy.Publisher(cmdPublisher, Twist, queue_size=10)
    rospy.init_node('mynode', anonymous=True)
    command = Twist()

    time.sleep(1.5)
    command.linear.x = 1
    command.angular.z = 6     
    rospy.loginfo(command)
    pub.publish(command)
S
#Number Functions
def drawzero(name):
    cmdPublisher = name + '/cmd_vel'
    pub = rospy.Publisher(cmdPublisher, Twist, queue_size=10)
    rospy.init_node('mynode', anonymous=True)
    command = Twist()
    
    time.sleep(1.5)
    command.linear.x = 1.2
    command.angular.z = 0      
    rospy.loginfo(command)
    pub.publish(command)
    
    time.sleep(1.5)
    command.linear.x = 0
    command.angular.z = -1.574       
    rospy.loginfo(command)
    pub.publish(command)
    
    time.sleep(1.5)
    command.linear.x = 3
    command.angular.z = 0       
    rospy.loginfo(command)
    pub.publish(command)
    
    time.sleep(1.5)
    command.linear.x = 0
    command.angular.z = -1.574       
    rospy.loginfo(command)
    pub.publish(command)
    
    time.sleep(1.5)
    command.linear.x = 1.2
    command.angular.z = 0      
    rospy.loginfo(command)
    pub.publish(command)
    
    time.sleep(1.5)
    command.linear.x = 0
    command.angular.z = -1.574       
    rospy.loginfo(command)
    pub.publish(command)
    
    time.sleep(1.5)
    command.linear.x = 3
    command.angular.z = 0       
    rospy.loginfo(command)
    pub.publish(command)

def drawone(name):
    cmdPublisher = name + '/cmd_vel'
    pub = rospy.Publisher(cmdPublisher, Twist, queue_size=10)
    rospy.init_node('mynode', anonymous=True)
    command = Twist()
    time.sleep(0.5)
    command.linear.x = 0.6
    command.angular.z = 0.0        
    rospy.loginfo(command)
    pub.publish(command)
    
    time.sleep(1.5)
    command.linear.x = 0
    command.angular.z = -1.57        
    rospy.loginfo(command)
    pub.publish(command)
    
    time.sleep(1.5)
    command.linear.x = 3
    command.angular.z = 0.0     
    rospy.loginfo(command)
    pub.publish(command)
    
    time.sleep(1.5)
    command.linear.x = 0
    command.angular.z = -1.57        
    rospy.loginfo(command)
    pub.publish(command)
    
    time.sleep(1.5)
    command.linear.x = 0.6
    command.angular.z = 0.0     
    rospy.loginfo(command)
    pub.publish(command)
    
    time.sleep(1.5)
    command.linear.x = 0
    command.angular.z = -3.144   
    rospy.loginfo(command)
    pub.publish(command)
    
    time.sleep(1.5)
    command.linear.x = 1.2
    command.angular.z = 0   
    rospy.loginfo(command)
    pub.publish(command)

def drawtwo(name):
    cmdPublisher = name + '/cmd_vel'
    pub = rospy.Publisher(cmdPublisher, Twist, queue_size=10)
    rospy.init_node('mynode', anonymous=True)
    command = Twist()
    time.sleep(0.5)
    
    time.sleep(1.5)
    command.linear.x = 1.3
    command.angular.z = 0.0     
    rospy.loginfo(command)
    pub.publish(command)
    
    time.sleep(1.5)
    command.linear.x = 0
    command.angular.z = -1.574       
    rospy.loginfo(command)
    pub.publish(command)
    
    time.sleep(1.5)
    command.linear.x = 1.6
    command.angular.z = 0.0     
    rospy.loginfo(command)
    pub.publish(command)
    
    time.sleep(1.5)
    command.linear.x = 0
    command.angular.z = -1.574       
    rospy.loginfo(command)
    pub.publish(command)
    
    time.sleep(1.5)
    command.linear.x = 1.3
    command.angular.z = 0.0     
    rospy.loginfo(command)
    pub.publish(command)
    
    time.sleep(1.5)
    command.linear.x = 0
    command.angular.z = 1.574       
    rospy.loginfo(command)
    pub.publish(command)
    
    time.sleep(1.5)
    command.linear.x = 1.6
    command.angular.z = 0.0     
    rospy.loginfo(command)
    pub.publish(command)
    
    time.sleep(1.5)
    command.linear.x = 0
    command.angular.z = 1.574       
    rospy.loginfo(command)
    pub.publish(command)
    
    time.sleep(1.5)
    command.linear.x = 1.3
    command.angular.z = 0.0     
    rospy.loginfo(command)
    pub.publish(command)

def drawthree(name):
    cmdPublisher = name + '/cmd_vel'
    pub = rospy.Publisher(cmdPublisher, Twist, queue_size=10)
    rospy.init_node('mynode', anonymous=True)
    command = Twist()
    
    time.sleep(0.5)
    command.linear.x = 0
    command.angular.z = -3.144       
    rospy.loginfo(command)
    pub.publish(command)
    
    time.sleep(1.5)
    command.linear.x = 0.3
    command.angular.z = 0.0        
    rospy.loginfo(command)
    pub.publish(command)
    
    time.sleep(1.5)
    command.linear.x = 0
    command.angular.z = -3.144       
    rospy.loginfo(command)
    pub.publish(command)
    
    time.sleep(1.5)
    command.linear.x = 1.4
    command.angular.z = 0.0     
    rospy.loginfo(command)
    pub.publish(command)
    
    time.sleep(1.5)
    command.linear.x = 0
    command.angular.z = -1.574       
    rospy.loginfo(command)
    pub.publish(command)
    
    time.sleep(1.5)
    command.linear.x = 1.7
    command.angular.z = 0.0     
    rospy.loginfo(command)
    pub.publish(command)
    
    time.sleep(1.5)
    command.linear.x = 0
    command.angular.z = -1.574       
    rospy.loginfo(command)
    pub.publish(command)
    
    time.sleep(1.5)
    command.linear.x = 1.4
    command.angular.z = 0.0     
    rospy.loginfo(command)
    pub.publish(command)
    
    time.sleep(1.5)
    command.linear.x = 0
    command.angular.z = 3.144       
    rospy.loginfo(command)
    pub.publish(command)
    
    time.sleep(1.5)
    command.linear.x = 1.4
    command.angular.z = 0.0     
    rospy.loginfo(command)
    pub.publish(command)
    
    time.sleep(1.5)
    command.linear.x = 0
    command.angular.z = -1.574       
    rospy.loginfo(command)
    pub.publish(command)
    
    time.sleep(1.5)
    command.linear.x = 1.7
    command.angular.z = 0.0     
    rospy.loginfo(command)
    pub.publish(command)
    
    time.sleep(1.5)
    command.linear.x = 0
    command.angular.z = -1.574       
    rospy.loginfo(command)
    pub.publish(command)
    
    time.sleep(1.5)
    command.linear.x = 1.4
    command.angular.z = 0.0     
    rospy.loginfo(command)
    pub.publish(command)

def drawfour(name):
    cmdPublisher = name + '/cmd_vel'
    pub = rospy.Publisher(cmdPublisher, Twist, queue_size=10)
    rospy.init_node('mynode', anonymous=True)
    command = Twist()
    
    time.sleep(0.5)
    command.linear.x = 0
    command.angular.z = -1.7      
    rospy.loginfo(command)
    pub.publish(command)
    
    time.sleep(1.5)
    command.linear.x = 3
    command.angular.z = 0.0        
    rospy.loginfo(command)
    pub.publish(command)
    
    time.sleep(1.5)
    command.linear.x = 0
    command.angular.z = 1.7      
    rospy.loginfo(command)
    pub.publish(command)
    
    time.sleep(1.5)
    command.linear.x = 2
    command.angular.z = 0        
    rospy.loginfo(command)
    pub.publish(command)
    
    time.sleep(1.5)
    command.linear.x = 0
    command.angular.z = -3.144      
    rospy.loginfo(command)
    pub.publish(command)
    
    time.sleep(1.5)
    command.linear.x = 0.7
    command.angular.z = 0        
    rospy.loginfo(command)
    pub.publish(command)
    
    time.sleep(1.5)
    command.linear.x = 0
    command.angular.z = 1.54      
    rospy.loginfo(command)
    pub.publish(command)
    
    time.sleep(1.5)
    command.linear.x = 1
    command.angular.z = 0        
    rospy.loginfo(command)
    pub.publish(command)
    
    
    time.sleep(1.5)
    command.linear.x = 0
    command.angular.z = -3.144      
    rospy.loginfo(command)
    pub.publish(command)
    
    time.sleep(1.5)
    command.linear.x = 2.3
    command.angular.z = 0        
    rospy.loginfo(command)
    pub.publish(command)

def drawfive(name):
    cmdPublisher = name + '/cmd_vel'
    pub = rospy.Publisher(cmdPublisher, Twist, queue_size=10)
    rospy.init_node('mynode', anonymous=True)
    command = Twist()
    
    
    time.sleep(1.5)
    command.linear.x = 1.7
    command.angular.z = 0       
    rospy.loginfo(command)
    pub.publish(command)
    
    time.sleep(1.5)
    command.linear.x = 0
    command.angular.z = 3.144     
    rospy.loginfo(command)
    pub.publish(command)
    
    time.sleep(1.5)
    command.linear.x = 1.5
    command.angular.z = 0       
    rospy.loginfo(command)
    pub.publish(command)
    
    time.sleep(1.5)
    command.linear.x = 0
    command.angular.z = 1.574       
    rospy.loginfo(command)
    pub.publish(command)
    
    time.sleep(1.5)
    command.linear.x = 1.7
    command.angular.z = 0       
    rospy.loginfo(command)
    pub.publish(command)
    
    time.sleep(1.5)
    command.linear.x = 0
    command.angular.z = 1.574       
    rospy.loginfo(command)
    pub.publish(command)
    
    time.sleep(1.5)
    command.linear.x = 1.4
    command.angular.z = 0       
    rospy.loginfo(command)
    pub.publish(command)
    
    time.sleep(1.5)
    command.linear.x = 0
    command.angular.z = -1.574       
    rospy.loginfo(command)
    pub.publish(command)
    
    time.sleep(1.5)
    command.linear.x = 1.7
    command.angular.z = 0       
    rospy.loginfo(command)
    pub.publish(command)
    
    time.sleep(1.5)
    command.linear.x = 0
    command.angular.z = -1.574       
    rospy.loginfo(command)
    pub.publish(command)
    
    time.sleep(1.5)
    command.linear.x = 1.4
    command.angular.z = 0       
    rospy.loginfo(command)
    pub.publish(command)

def drawsix(name):

    drawfive(name)
    cmdPublisher = name + '/cmd_vel'
    pub = rospy.Publisher(cmdPublisher, Twist, queue_size=10)
    rospy.init_node('mynode', anonymous=True)
    command = Twist()
    
    time.sleep(1.5)
    command.linear.x = 0
    command.angular.z = -1.574       
    rospy.loginfo(command)
    pub.publish(command)
    
    time.sleep(1.5)
    command.linear.x = 1.7
    command.angular.z = 0       
    rospy.loginfo(command)
    pub.publish(command)

def drawseven(name):
    cmdPublisher = name + '/cmd_vel'
    pub = rospy.Publisher(cmdPublisher, Twist, queue_size=10)
    rospy.init_node('mynode', anonymous=True)
    command = Twist()
    
    time.sleep(1.5)
    command.linear.x = 0.85
    command.angular.z = 0      
    rospy.loginfo(command)
    pub.publish(command)
    
    time.sleep(1.5)
    command.linear.x = 0
    command.angular.z = -1.574       
    rospy.loginfo(command)
    pub.publish(command)
    
    time.sleep(1.5)
    command.linear.x = 3
    command.angular.z = 0       
    rospy.loginfo(command)
    pub.publish(command)
    
    time.sleep(1.5)
    command.linear.x = 0
    command.angular.z = -3.144       
    rospy.loginfo(command)
    pub.publish(command)
    
    time.sleep(1.5)
    command.linear.x = 1.5
    command.angular.z = 0       
    rospy.loginfo(command)
    pub.publish(command)
    
    time.sleep(1.5)
    command.linear.x = 0
    command.angular.z = -1.574       
    rospy.loginfo(command)
    pub.publish(command)
    
    time.sleep(1.5)
    command.linear.x = 0.3
    command.angular.z = 0       
    rospy.loginfo(command)
    pub.publish(command)
    
    time.sleep(1.5)
    command.linear.x = 0
    command.angular.z = -3.144       
    rospy.loginfo(command)
    pub.publish(command)
    
    time.sleep(1.5)
    command.linear.x = 1
    command.angular.z = 0       
    rospy.loginfo(command)
    pub.publish(command)

def draweight(name):
    drawzero(name)
    cmdPublisher = name + '/cmd_vel'
    pub = rospy.Publisher(cmdPublisher, Twist, queue_size=10)
    rospy.init_node('mynode', anonymous=True)
    command = Twist()
    
    time.sleep(1.5)
    command.linear.x = 0
    command.angular.z =-3.144    
    rospy.loginfo(command)
    pub.publish(command)
    
    time.sleep(1.5)
    command.linear.x = 1.5
    command.angular.z =0    
    rospy.loginfo(command)
    pub.publish(command)
    
    time.sleep(1.5)
    command.linear.x = 0
    command.angular.z = 1.574   
    rospy.loginfo(command)
    pub.publish(command)
    
    time.sleep(1.5)
    command.linear.x = 1.2
    command.angular.z = 0      
    rospy.loginfo(command)
    pub.publish(command)

def drawnine(name):
    cmdPublisher = name + '/cmd_vel'
    pub = rospy.Publisher(cmdPublisher, Twist, queue_size=10)
    rospy.init_node('mynode', anonymous=True)
    command = Twist()

    time.sleep(1.5)
    command.linear.x = 1.2
    command.angular.z = 0      
    rospy.loginfo(command)
    pub.publish(command)
    
    time.sleep(1.5)
    command.linear.x = 0
    command.angular.z = -1.574   
    rospy.loginfo(command)
    pub.publish(command)
    
    time.sleep(1.5)
    command.linear.x = 3
    command.angular.z = 0      
    rospy.loginfo(command)
    pub.publish(command)
    
    time.sleep(1.5)
    command.linear.x = 0
    command.angular.z = -3.144   
    rospy.loginfo(command)
    pub.publish(command)
    
    time.sleep(1.5)
    command.linear.x = 1.5
    command.angular.z = 0      
    rospy.loginfo(command)
    pub.publish(command)
    
    time.sleep(1.5)
    command.linear.x = 0
    command.angular.z = 1.574   
    rospy.loginfo(command)
    pub.publish(command)
    
    time.sleep(1.5)
    command.linear.x = 1.2
    command.angular.z = 0      
    rospy.loginfo(command)
    pub.publish(command)
    
    time.sleep(1.5)
    command.linear.x = 0
    command.angular.z = -1.574   
    rospy.loginfo(command)
    pub.publish(command)
    
    time.sleep(1.5)
    command.linear.x = 1.5
    command.angular.z = 0      
    rospy.loginfo(command)
    pub.publish(command)


#Get the time
def draw_current_time():
    # Get the current time
    now = datetime.datetime.now()
    hour = now.hour
    minute = now.minute
    second = now.second

    # Break the hour and minute into individual digits
    hour_tens = hour // 10
    hour_ones = hour % 10
    minute_tens = minute // 10
    minute_ones = minute % 10
    second_tens = second // 10  
    second_ones = second % 10   

    # Using a dictionary to map numbers to their respective functions
    draw_funcs = {
        0: drawzero,
        1: drawone,
        2: drawtwo,
        3: drawthree,
        4: drawfour,
        5: drawfive,
        6: drawsix,
        7: drawseven,
        8: draweight,
        9: drawnine
    }
    
    # Draw the current hour and minute
    draw_funcs[hour_tens]("turtle_hour_tens")
    time.sleep(1)
    kill_turtle("turtle_hour_tens")
    
    draw_funcs[hour_ones]("turtle_hour_ones")
    time.sleep(1)
    kill_turtle("turtle_hour_ones")
    
    draw_funcs[minute_tens]("turtle_minute_tens")
    time.sleep(1)
    kill_turtle("turtle_minute_tens")
    
    draw_funcs[minute_ones]("turtle_minute_ones")
    time.sleep(1)
    kill_turtle("turtle_minute_ones")
    
    draw_funcs[second_tens]("turtle_second_tens") 
    time.sleep(1) 
    kill_turtle("turtle_second_tens")
    
    draw_funcs[second_ones]("turtle_second_ones") 
    time.sleep(1)
    kill_turtle("turtle_second_ones")
    

if __name__ == '__main__':
    rospy.init_node('mynode', anonymous=True)
    # Kill the default turtle
    kill_turtle("turtle1")

    #Spawn    
    #Turtle for Hourly   
    spawn_turtle(1,10,"turtle_hour_tens")
    spawn_turtle(3.2,10,"turtle_hour_ones")

    #Turtle for Dot
    spawn_turtle(5.7,9,"turtle_dot1")
    spawn_turtle(5.7,7.5,"turtle_dot2")

    #Turtle for Min
    spawn_turtle(7.1,10,"turtle_minute_tens")
    spawn_turtle(9.6,10,"turtle_minute_ones")

    #Turtle for Sec
    spawn_turtle(5.8,4,"turtle_second_tens")
    spawn_turtle(8.5,4,"turtle_second_ones")

    #Drawing dot
    drawdot("turtle_dot1")
    drawdot("turtle_dot2")
    time.sleep(1)
    kill_turtle("turtle_dot1")
    kill_turtle("turtle_dot2")

    draw_current_time()
